.columns {
  @include respond-to(small) {
    // max-width: 100%;
    display: flex;
    margin-left: -0.75rem;
    margin-right: -0.75rem;
  }
    &.justify-content--flex-end {
        justify-content: flex-end;
    }
    &.justify-content--center {
        justify-content: center;
    }
    &.justify-content--space-between {
        justify-content: space-between;
    }
    &.justify-content--space-around {
        justify-content: space-around;
    }
    &.align-items--flex-start {
        align-items: flex-start;
    }
    &.align-items--flex-end {
        align-items: flex-end;
    }
    &.align-items--center {
        align-items: center;
    }
    &.align-items--baseline {
        align-items: baseline;
    }
    &.align-content--flex-start {
        align-content: flex-start;
    }
    &.align-content--flex-end {
        align-content: flex-end;
    }
    &.align-content--center {
        align-content: center;
    }
    &.align-content--space-between {
        align-content: space-between;
    }
    &.align-content--space-around {
        align-content: space-around;
    }
    &.flex-flow--row-wrap {
      flex-flow: row wrap;
    }
    &.flex-flow--row-nowrap {
      flex-flow: row nowrap;
    }
    &.flex-flow--column-wrap {
      flex-flow: column wrap;
    }
    &.flex-flow--column-nowrap {
      flex-flow: column nowrap;
    }

}

.column {
  flex: 1;
  flex-basis: 0;
  flex-grow: 1;
  flex-shrink: 1;
  @for $i from 1 through $grid-columns {
    &.is-#{$i} {
      @include respond-to(small) {
        flex: none;
        width: ($i / $grid-columns) * 100%;
      }
    }
  }
  img {
    max-width: 100%;
    height: auto;
  }
  .is-one-third {
    width: 30%;
  }
  .is-two-thirds {
    width: 60%;
  }
}

.columns.has-gutters {
  .column {
    @for $i from 1 through $grid-columns {
      &.is-#{$i} {
        @include respond-to(small) {
          $width: (($i / $grid-columns) * 100%);
          width: calc(#{$width} - #{$grid-gutter});
          margin: $grid-gutter;
        }
      }
    }
  }
}
